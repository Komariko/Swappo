'use client';

import { useEffect, useMemo, useState } from 'react';
import { db, auth } from '@/firebase/config';
import { doc, updateDoc, serverTimestamp } from 'firebase/firestore';
import { onAuthStateChanged } from 'firebase/auth';
import { CircleDot, MessageSquare, CheckCircle2, Loader2, Info } from 'lucide-react';

/* ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏ö‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ (‡πÑ‡∏ß‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô‡∏õ‡∏∏‡πà‡∏°/‡∏õ‡πâ‡∏≤‡∏¢) */
const LABEL = {
  available: '‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
  contacting: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
  completed: '‡πÅ‡∏•‡∏Å/‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
};

/* ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ/‡∏™‡πÑ‡∏ï‡∏•‡πå/‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡∏á‡πà‡∏≤‡∏¢ */
const STYLES = {
  available: {
    ring: 'ring-emerald-300/70',
    border: 'border-emerald-200',
    bg: 'bg-emerald-50',
    text: 'text-emerald-700',
    icon: <CircleDot className="w-4 h-4" />,
  },
  contacting: {
    ring: 'ring-amber-300/70',
    border: 'border-amber-200',
    bg: 'bg-amber-50',
    text: 'text-amber-700',
    icon: <MessageSquare className="w-4 h-4" />,
  },
  completed: {
    ring: 'ring-rose-300/70',
    border: 'border-rose-200',
    bg: 'bg-rose-50',
    text: 'text-rose-700',
    icon: <CheckCircle2 className="w-4 h-4" />,
  },
};

/**
 * OwnerStatusPanel
 * ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‚Äú‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‚Äù ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ item (‡∏¢‡∏±‡∏á‡∏°‡∏µ / ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ / ‡πÅ‡∏•‡∏Å‡πÅ‡∏•‡πâ‡∏ß)
 * - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô Stepper + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
 * - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Firestore ‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡∏ú‡πà‡∏≤‡∏ô onChanged)
 */
export default function OwnerStatusPanel({ item, onChanged }) {
  /* ‡πÄ‡∏Å‡πá‡∏ö uid ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô + ‡∏ò‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á */
  const [uid, setUid] = useState(null);
  const [authReady, setAuthReady] = useState(false);

  /* ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å + ‡πÅ‡∏à‡πâ‡∏á ‚Äú‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß‚Äù ‡πÅ‡∏õ‡πä‡∏ö‡∏´‡∏ô‡∏∂‡πà‡∏á */
  const [busy, setBusy] = useState(false);
  const [saved, setSaved] = useState(false);

  /* üëç ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‚Äú‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‚Äù ‡∏î‡πâ‡∏ß‡∏¢ useMemo ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡∏ä‡πà‡∏ß‡∏¢‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå) */
  const steps = useMemo(
    () => [
      { key: 'available',  label: LABEL.available,  ...STYLES.available  },
      { key: 'contacting', label: LABEL.contacting, ...STYLES.contacting },
      { key: 'completed',  label: LABEL.completed,  ...STYLES.completed  },
    ],
    []
  );

  /* ‡∏ü‡∏±‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏à‡∏≤‡∏Å Firebase Auth */
  useEffect(() => {
    const unsub = onAuthStateChanged(auth, (u) => {
      setUid(u?.uid || null);
      setAuthReady(true);
    });
    return () => unsub && unsub();
  }, []);

  /* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ ‚Äú‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‚Äù) */
  const current  = item?.status ?? 'available';

  /* ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á ‚Üí ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏∞‡πÑ‡∏£) */
  const isOwner  = authReady && !!uid && item?.user_id === uid;
  if (!isOwner) return null;

  /* ‡∏Å‡∏î‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‚Üí ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏õ‡∏ó‡∏µ‡πà Firestore ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å onChanged ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏° */
  async function setStatus(status) {
    /* ‡∏Å‡∏±‡∏ô‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡∏ï‡∏≠‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏¥‡∏°‡∏ã‡πâ‡∏≥ ‡πÜ */
    if (busy || status === current) return;
    /* ‡∏Å‡∏±‡∏ô‡∏û‡∏•‡∏≤‡∏î: ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ item.id ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏î‡πâ */
    if (!item?.id) {
      alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (item.id)');
      return;
    }

    setBusy(true);
    setSaved(false);
    try {
      await updateDoc(doc(db, 'items', item.id), {
        status,
        statusUpdatedAt: serverTimestamp(), // ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      });
      onChanged?.(status);     // ‡πÅ‡∏à‡πâ‡∏á‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠ setState ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡∏ï‡πà‡∏≠
      setSaved(true);          // ‡πÇ‡∏ä‡∏ß‡πå‡∏õ‡πâ‡∏≤‡∏¢ ‚Äú‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß‚Äù
      setTimeout(() => setSaved(false), 1200);
    } catch (e) {
      console.error(e);
      alert(e?.message || '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } finally {
      setBusy(false);
    }
  }

  return (
    <div className="rounded-2xl border border-slate-200 bg-white p-4 shadow-sm">
      {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ + ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡πâ‡∏ô ‡πÜ */}
      <div className="flex items-center justify-between">
        <div className="font-semibold text-slate-800">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</div>
        <div className="text-xs text-slate-500 flex items-center gap-1">
          <Info className="w-3.5 h-3.5" />
          ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏´‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        </div>
      </div>

      {/* ‡πÅ‡∏ñ‡∏ö Stepper ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô */}
      <div className="mt-3 relative">
        <div className="absolute left-2 right-2 top-1/2 -translate-y-1/2 h-1 bg-slate-100 rounded-full" />
        <div className="relative grid grid-cols-3">
          {steps.map((s) => {
            const active = current === s.key;
            return (
              <div key={s.key} className="flex flex-col items-center">
                <div
                  className={[
                    'z-10 flex items-center justify-center w-7 h-7 rounded-full border bg-white',
                    active ? s.border + ' ' + s.bg : 'border-slate-300',
                  ].join(' ')}
                >
                  {s.icon}
                </div>
                <div className="mt-2 text-[11px] text-slate-600">{s.label}</div>
              </div>
            );
          })}
        </div>
      </div>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏ö‡∏ö 3 ‡∏õ‡∏∏‡πà‡∏° (Segemented Control) */}
      <div className="mt-4 grid grid-cols-1 sm:grid-cols-3 gap-2">
        {steps.map((s) => {
          const active = current === s.key;
          return (
            <button
              key={s.key}
              disabled={busy}
              onClick={() => setStatus(s.key)}
              aria-pressed={active} /* a11y: ‡∏ö‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏° */
              className={[
                'w-full inline-flex items-center justify-center gap-2 px-3 py-2 rounded-xl border text-sm transition',
                active
                  ? `${s.bg} ${s.text} ${s.border} ring-2 ${s.ring}`
                  : 'bg-white text-slate-700 border-slate-200 hover:bg-slate-50',
                busy && 'opacity-60 cursor-not-allowed',
              ].join(' ')}
              title={s.label}
            >
              {busy && active ? <Loader2 className="w-4 h-4 animate-spin" /> : s.icon}
              <span className="font-medium">{s.label}</span>
            </button>
          );
        })}
      </div>

      {/* ‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á: ‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î + ‡∏õ‡πâ‡∏≤‡∏¢ ‚Äú‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß‚Äù */}
      <div className="mt-3 flex items-center justify-between text-[12px]">
        <div className="text-slate-500">
          ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:{' '}
          <span className="font-medium">
            {item?.statusUpdatedAt?.toDate
              ? item.statusUpdatedAt.toDate().toLocaleString('th-TH')
              : '‚Äî'}
          </span>
        </div>
        {saved && (
          <div className="px-2 py-0.5 rounded-md bg-emerald-50 text-emerald-700 border border-emerald-200">
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß ‚úî
          </div>
        )}
      </div>
    </div>
  );
}
